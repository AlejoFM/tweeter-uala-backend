version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: uala-twitter-clone-app
    restart: unless-stopped
    working_dir: /    volu    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=twitter_clone
      - DB_USERNAME=twitter
      - DB_PASSWORD=secret
    volumes:
      - ./:/var/www
    networks:
      - twitter-clone
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: uala-twitter-clone-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      app:
        condition: service_healthy
    networks:
      - twitter-clone

  mysql:
    image: mysql:8.0
    container_name: uala-twitter-clone-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: twitter_clone
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: secret
      MYSQL_USER: twitter
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - twitter-clone

  redis:
    image: redis:alpine
    container_name: uala-twitter-clone-redis
    restart: unless-stopped
    networks:
-clone-redis
    restart: unless-stopped
    networks:
-clone-redis
    restart: unless-stopped
    networks:
-clone-redis
    restart: unless-stopped
    networks:
r-clone-redis
    restart: unless-stopped
    networks:
      - twitter-clone

networks:
  twitter-clone:
    driver: bridge

volumes:
  dbdata: 